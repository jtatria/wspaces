% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/io.R
\name{read_cooccur}
\alias{read_cooccur}
\title{Read cooccurrence matrix from disk.}
\usage{
read_cooccur(file, lxcn = NULL, shrink = FALSE)
}
\arguments{
\item{file}{Location of the cooccurrence matrix file on disk.}
}
\value{
A Matrix::sparseMatrix object containing occurrence counts for terms in contexts.
}
\description{
Reads cooccurrence data from a file on disk, stored as a sparse tensor saved in
tuple format; i.e. a plain array of ( coord, value ) structs, where coord is itself an array
of integer coordinates for each dimension in the represented tensor and value is a floating point
number.
}
\details{
The default corpus source implementation uses a term-term context definition and stores
cooccurrences in a rank-2 tensor, using 64 bit integers for coordinates and double precision
floats for values.

The specific relationship between values in the returned tensor and the actual
distributional patterns for each term depends on the upstream corpus source cooccurrence
counting strategy.

The default implementation uses a sliding window with harmonic weights equal to the inverse of
the distance between focus and context terms.

This is similar to the strategy used by the Glove model for the computation of cooccurrence
counts. This format is for now hardcoded, but this is subject to change in future versions,
including both the addition of higher ranks for storing partial sum components for each
term-context tensor as well as summary statistics that may be useful for additional
transformations of the cooccurrence data.

For now, the stored data consists of scalar values for the weighted sum of all
term-context observations, with no information about partial results.
}
